
#pragma once
#include <SchmixEngine/Core/Reflection/Macros.h>
#include <string>
#include <vector>
#include <unordered_map>
#include <stdint.h>

namespace SchmixEngine
{
	SMX_ENUM(SMX_ENUM_DEFAULT(UNKNOWN_AXIS))
	enum class Axis : uint32_t
	{
		//Mouse
		MOUSE_X = 0,
		MOUSE_Y = 1,

		//Gamepad
		GAMEPAD_LEFT_STICK_X = 2,
		GAMEPAD_LEFT_STICK_Y = 3,
		GAMEPAD_RIGHT_STICK_X = 4,
		GAMEPAD_RIGHT_STICK_Y = 5,
		GAMEPAD_LEFT_TRIGGER = 6,
		GAMEPAD_RIGHT_TRIGGER = 7,

		//Joystick
		JOYSTICK_GENERIC_AXIS_0 = 8,
		JOYSTICK_GENERIC_AXIS_1 = 9,
		JOYSTICK_GENERIC_AXIS_2 = 10,
		JOYSTICK_GENERIC_AXIS_3 = 11,
		JOYSTICK_GENERIC_AXIS_4 = 12,
		JOYSTICK_GENERIC_AXIS_5 = 13,
		JOYSTICK_GENERIC_AXIS_6 = 14,
		JOYSTICK_GENERIC_AXIS_7 = 15,

		UNKNOWN_AXIS = 16,

		FIRST = MOUSE_X,
		LAST = UNKNOWN_AXIS
	};

	SMX_ENUM(SMX_ENUM_DEFAULT(UNKNOWN_BUTTON))
	enum class Buttons : uint32_t
	{
		//Keyboard
		/* Printable keys */
		KEYBOARD_KEY_SPACE = 0,
		KEYBOARD_KEY_APOSTROPHE = 1,  /* ' */
		KEYBOARD_KEY_COMMA = 2,  /* , */
		KEYBOARD_KEY_MINUS = 3,  /* - */
		KEYBOARD_KEY_PERIOD = 4,  /* . */
		KEYBOARD_KEY_SLASH = 5,  /* / */
		KEYBOARD_KEY_0 = 6,
		KEYBOARD_KEY_1 = 7,
		KEYBOARD_KEY_2 = 8,
		KEYBOARD_KEY_3 = 9,
		KEYBOARD_KEY_4 = 10,
		KEYBOARD_KEY_5 = 11,
		KEYBOARD_KEY_6 = 12,
		KEYBOARD_KEY_7 = 13,
		KEYBOARD_KEY_8 = 14,
		KEYBOARD_KEY_9 = 15,
		KEYBOARD_KEY_SEMICOLON = 16,  /* ; */
		KEYBOARD_KEY_EQUAL = 17,  /* = */
		KEYBOARD_KEY_A = 18,
		KEYBOARD_KEY_B = 19,
		KEYBOARD_KEY_C = 20,
		KEYBOARD_KEY_D = 21,
		KEYBOARD_KEY_E = 22,
		KEYBOARD_KEY_F = 23,
		KEYBOARD_KEY_G = 24,
		KEYBOARD_KEY_H = 25,
		KEYBOARD_KEY_I = 26,
		KEYBOARD_KEY_J = 27,
		KEYBOARD_KEY_K = 28,
		KEYBOARD_KEY_L = 29,
		KEYBOARD_KEY_M = 30,
		KEYBOARD_KEY_N = 31,
		KEYBOARD_KEY_O = 32,
		KEYBOARD_KEY_P = 33,
		KEYBOARD_KEY_Q = 34,
		KEYBOARD_KEY_R = 35,
		KEYBOARD_KEY_S = 36,
		KEYBOARD_KEY_T = 37,
		KEYBOARD_KEY_U = 38,
		KEYBOARD_KEY_V = 39,
		KEYBOARD_KEY_W = 40,
		KEYBOARD_KEY_X = 41,
		KEYBOARD_KEY_Y = 42,
		KEYBOARD_KEY_Z = 43,
		KEYBOARD_KEY_LEFT_BRACKET = 44,  /* [ */
		KEYBOARD_KEY_BACKSLASH = 45,  /* \ */
		KEYBOARD_KEY_RIGHT_BRACKET = 46,  /* ] */
		KEYBOARD_KEY_GRAVE_ACCENT = 47,  /* ` */
		KEYBOARD_KEY_WORLD_1 = 48, /* non-US #1 */
		KEYBOARD_KEY_WORLD_2 = 49, /* non-US #2 */

		/* Function keys */
		KEYBOARD_KEY_ESCAPE = 50,
		KEYBOARD_KEY_ENTER = 51,
		KEYBOARD_KEY_TAB = 52,
		KEYBOARD_KEY_BACKSPACE = 53,
		KEYBOARD_KEY_INSERT = 54,
		KEYBOARD_KEY_DELETE = 55,
		KEYBOARD_KEY_RIGHT = 56,
		KEYBOARD_KEY_LEFT = 57,
		KEYBOARD_KEY_DOWN = 58,
		KEYBOARD_KEY_UP = 59,
		KEYBOARD_KEY_PAGE_UP = 60,
		KEYBOARD_KEY_PAGE_DOWN = 61,
		KEYBOARD_KEY_HOME = 62,
		KEYBOARD_KEY_END = 63,
		KEYBOARD_KEY_CAPS_LOCK = 64,
		KEYBOARD_KEY_SCROLL_LOCK = 65,
		KEYBOARD_KEY_NUM_LOCK = 66,
		KEYBOARD_KEY_PRINT_SCREEN = 67,
		KEYBOARD_KEY_PAUSE = 68,
		KEYBOARD_KEY_F1 = 69,
		KEYBOARD_KEY_F2 = 70,
		KEYBOARD_KEY_F3 = 71,
		KEYBOARD_KEY_F4 = 72,
		KEYBOARD_KEY_F5 = 73,
		KEYBOARD_KEY_F6 = 74,
		KEYBOARD_KEY_F7 = 75,
		KEYBOARD_KEY_F8 = 76,
		KEYBOARD_KEY_F9 = 77,
		KEYBOARD_KEY_F10 = 78,
		KEYBOARD_KEY_F11 = 79,
		KEYBOARD_KEY_F12 = 80,
		KEYBOARD_KEY_KP_0 = 81,
		KEYBOARD_KEY_KP_1 = 82,
		KEYBOARD_KEY_KP_2 = 83,
		KEYBOARD_KEY_KP_3 = 84,
		KEYBOARD_KEY_KP_4 = 85,
		KEYBOARD_KEY_KP_5 = 86,
		KEYBOARD_KEY_KP_6 = 87,
		KEYBOARD_KEY_KP_7 = 88,
		KEYBOARD_KEY_KP_8 = 89,
		KEYBOARD_KEY_KP_9 = 90,
		KEYBOARD_KEY_KP_DECIMAL = 91,
		KEYBOARD_KEY_KP_DIVIDE = 92,
		KEYBOARD_KEY_KP_MULTIPLY = 93,
		KEYBOARD_KEY_KP_SUBTRACT = 94,
		KEYBOARD_KEY_KP_ADD = 95,
		KEYBOARD_KEY_KP_ENTER = 96,
		KEYBOARD_KEY_KP_EQUAL = 97,
		KEYBOARD_KEY_LEFT_SHIFT = 98,
		KEYBOARD_KEY_LEFT_CONTROL = 99,
		KEYBOARD_KEY_LEFT_ALT = 100,
		KEYBOARD_KEY_RIGHT_SHIFT = 101,
		KEYBOARD_KEY_RIGHT_CONTROL = 102,
		KEYBOARD_KEY_RIGHT_ALT = 103,
		KEYBOARD_KEY_MENU = 104,

		//Mouse
		MOUSE_CLICK_LEFT = 105,
		MOUSE_CLICK_MIDDLE = 106,
		MOUSE_CLICK_RIGHT = 107,

		//Gamepad
		GAMEPAD_BUTTON_A = 108,
		GAMEPAD_BUTTON_B = 109,
		GAMEPAD_BUTTON_X = 110,
		GAMEPAD_BUTTON_Y = 111,
		GAMEPAD_BUTTON_LEFT_BUMPER = 112,
		GAMEPAD_BUTTON_RIGHT_BUMPER = 113,
		GAMEPAD_BUTTON_START = 114,
		GAMEPAD_BUTTON_SELECT = 115,
		GAMEPAD_BUTTON_LEFT_THUMB = 116,
		GAMEPAD_BUTTON_RIGHT_THUMB = 117,
		GAMEPAD_BUTTON_DPAD_UP = 118,
		GAMEPAD_BUTTON_DPAD_RIGHT = 119,
		GAMEPAD_BUTTON_DPAD_DOWN = 120,
		GAMEPAD_BUTTON_DPAD_LEFT = 121,

		/*Generic Joystick Buttons*/
		JOYSTICK_GENERIC_BUTTON_0 = 122,
		JOYSTICK_GENERIC_BUTTON_1 = 123,
		JOYSTICK_GENERIC_BUTTON_2 = 124,
		JOYSTICK_GENERIC_BUTTON_3 = 125,
		JOYSTICK_GENERIC_BUTTON_4 = 126,
		JOYSTICK_GENERIC_BUTTON_5 = 127,
		JOYSTICK_GENERIC_BUTTON_6 = 128,
		JOYSTICK_GENERIC_BUTTON_7 = 129,
		JOYSTICK_GENERIC_BUTTON_8 = 130,
		JOYSTICK_GENERIC_BUTTON_9 = 131,
		JOYSTICK_GENERIC_BUTTON_10 = 132,
		JOYSTICK_GENERIC_BUTTON_11 = 133,
		JOYSTICK_GENERIC_BUTTON_12 = 134,
		JOYSTICK_GENERIC_BUTTON_13 = 135,
		JOYSTICK_GENERIC_BUTTON_14 = 136,
		JOYSTICK_GENERIC_BUTTON_15 = 137,
		JOYSTICK_GENERIC_BUTTON_16 = 138,
		JOYSTICK_GENERIC_BUTTON_17 = 139,
		JOYSTICK_GENERIC_BUTTON_18 = 140,
		JOYSTICK_GENERIC_BUTTON_19 = 141,
		JOYSTICK_GENERIC_BUTTON_20 = 142,
		JOYSTICK_GENERIC_BUTTON_21 = 143,
		JOYSTICK_GENERIC_BUTTON_22 = 144,
		JOYSTICK_GENERIC_BUTTON_23 = 145,
		JOYSTICK_GENERIC_BUTTON_24 = 146,
		JOYSTICK_GENERIC_BUTTON_25 = 147,
		JOYSTICK_GENERIC_BUTTON_26 = 148,
		JOYSTICK_GENERIC_BUTTON_27 = 149,
		JOYSTICK_GENERIC_BUTTON_28 = 150,
		JOYSTICK_GENERIC_BUTTON_29 = 151,
		JOYSTICK_GENERIC_BUTTON_30 = 152,
		JOYSTICK_GENERIC_BUTTON_31 = 153,
		JOYSTICK_GENERIC_BUTTON_32 = 154,
		JOYSTICK_GENERIC_BUTTON_33 = 155,
		JOYSTICK_GENERIC_BUTTON_34 = 156,
		JOYSTICK_GENERIC_BUTTON_35 = 157,
		JOYSTICK_GENERIC_BUTTON_36 = 158,
		JOYSTICK_GENERIC_BUTTON_37 = 159,
		JOYSTICK_GENERIC_BUTTON_38 = 160,
		JOYSTICK_GENERIC_BUTTON_39 = 161,
		JOYSTICK_GENERIC_BUTTON_40 = 162,
		JOYSTICK_GENERIC_BUTTON_41 = 163,
		JOYSTICK_GENERIC_BUTTON_42 = 164,
		JOYSTICK_GENERIC_BUTTON_43 = 165,
		JOYSTICK_GENERIC_BUTTON_44 = 166,
		JOYSTICK_GENERIC_BUTTON_45 = 167,
		JOYSTICK_GENERIC_BUTTON_46 = 168,
		JOYSTICK_GENERIC_BUTTON_47 = 169,
		JOYSTICK_GENERIC_BUTTON_48 = 170,
		JOYSTICK_GENERIC_BUTTON_49 = 171,
		JOYSTICK_GENERIC_BUTTON_50 = 172,
		JOYSTICK_GENERIC_BUTTON_51 = 173,
		JOYSTICK_GENERIC_BUTTON_52 = 174,
		JOYSTICK_GENERIC_BUTTON_53 = 175,
		JOYSTICK_GENERIC_BUTTON_54 = 176,
		JOYSTICK_GENERIC_BUTTON_55 = 177,
		JOYSTICK_GENERIC_BUTTON_56 = 178,
		JOYSTICK_GENERIC_BUTTON_57 = 179,
		JOYSTICK_GENERIC_BUTTON_58 = 180,
		JOYSTICK_GENERIC_BUTTON_59 = 181,
		JOYSTICK_GENERIC_BUTTON_60 = 182,
		JOYSTICK_GENERIC_BUTTON_61 = 183,
		JOYSTICK_GENERIC_BUTTON_62 = 184,
		JOYSTICK_GENERIC_BUTTON_63 = 185,
		JOYSTICK_GENERIC_BUTTON_64 = 186,
		JOYSTICK_GENERIC_BUTTON_65 = 187,
		JOYSTICK_GENERIC_BUTTON_66 = 188,
		JOYSTICK_GENERIC_BUTTON_67 = 189,
		JOYSTICK_GENERIC_BUTTON_68 = 190,
		JOYSTICK_GENERIC_BUTTON_69 = 191,
		JOYSTICK_GENERIC_BUTTON_70 = 192,
		JOYSTICK_GENERIC_BUTTON_71 = 193,
		JOYSTICK_GENERIC_BUTTON_72 = 194,
		JOYSTICK_GENERIC_BUTTON_73 = 195,
		JOYSTICK_GENERIC_BUTTON_74 = 196,
		JOYSTICK_GENERIC_BUTTON_75 = 197,
		JOYSTICK_GENERIC_BUTTON_76 = 198,
		JOYSTICK_GENERIC_BUTTON_77 = 199,
		JOYSTICK_GENERIC_BUTTON_78 = 200,
		JOYSTICK_GENERIC_BUTTON_79 = 201,
		JOYSTICK_GENERIC_BUTTON_80 = 202,
		JOYSTICK_GENERIC_BUTTON_81 = 203,
		JOYSTICK_GENERIC_BUTTON_82 = 204,
		JOYSTICK_GENERIC_BUTTON_83 = 205,
		JOYSTICK_GENERIC_BUTTON_84 = 206,
		JOYSTICK_GENERIC_BUTTON_85 = 207,
		JOYSTICK_GENERIC_BUTTON_86 = 208,
		JOYSTICK_GENERIC_BUTTON_87 = 209,
		JOYSTICK_GENERIC_BUTTON_88 = 210,
		JOYSTICK_GENERIC_BUTTON_89 = 211,
		JOYSTICK_GENERIC_BUTTON_90 = 212,
		JOYSTICK_GENERIC_BUTTON_91 = 213,
		JOYSTICK_GENERIC_BUTTON_92 = 214,
		JOYSTICK_GENERIC_BUTTON_93 = 215,
		JOYSTICK_GENERIC_BUTTON_94 = 216,
		JOYSTICK_GENERIC_BUTTON_95 = 217,
		JOYSTICK_GENERIC_BUTTON_96 = 218,
		JOYSTICK_GENERIC_BUTTON_97 = 219,
		JOYSTICK_GENERIC_BUTTON_98 = 220,
		JOYSTICK_GENERIC_BUTTON_99 = 221,
		JOYSTICK_GENERIC_BUTTON_100 = 222,
		JOYSTICK_GENERIC_BUTTON_101 = 223,
		JOYSTICK_GENERIC_BUTTON_102 = 224,
		JOYSTICK_GENERIC_BUTTON_103 = 225,
		JOYSTICK_GENERIC_BUTTON_104 = 226,
		JOYSTICK_GENERIC_BUTTON_105 = 227,
		JOYSTICK_GENERIC_BUTTON_106 = 228,
		JOYSTICK_GENERIC_BUTTON_107 = 229,
		JOYSTICK_GENERIC_BUTTON_108 = 230,
		JOYSTICK_GENERIC_BUTTON_109 = 231,
		JOYSTICK_GENERIC_BUTTON_110 = 232,
		JOYSTICK_GENERIC_BUTTON_111 = 233,
		JOYSTICK_GENERIC_BUTTON_112 = 234,
		JOYSTICK_GENERIC_BUTTON_113 = 235,
		JOYSTICK_GENERIC_BUTTON_114 = 236,
		JOYSTICK_GENERIC_BUTTON_115 = 237,
		JOYSTICK_GENERIC_BUTTON_116 = 238,
		JOYSTICK_GENERIC_BUTTON_117 = 239,
		JOYSTICK_GENERIC_BUTTON_118 = 240,
		JOYSTICK_GENERIC_BUTTON_119 = 241,
		JOYSTICK_GENERIC_BUTTON_120 = 242,
		JOYSTICK_GENERIC_BUTTON_121 = 243,
		JOYSTICK_GENERIC_BUTTON_122 = 244,
		JOYSTICK_GENERIC_BUTTON_123 = 245,
		JOYSTICK_GENERIC_BUTTON_124 = 246,
		JOYSTICK_GENERIC_BUTTON_125 = 247,
		JOYSTICK_GENERIC_BUTTON_126 = 248,
		JOYSTICK_GENERIC_BUTTON_127 = 249,

		UNKNOWN_BUTTON = 250,

		FIRST = KEYBOARD_KEY_SPACE,
		LAST = UNKNOWN_BUTTON
	};
	
	SMX_ENUM(SMX_ENUM_DEFAULT(RELEASED))
	enum class ActionMappingState : uint32_t
	{
		RELEASED = 0,
		PRESSED = 1,
		HELD = 2,
	};

	SMX_CLASS()
	struct AxisMapping
	{
		//First = Axis, Second = Multiplier Scale
		std::vector<std::pair<Axis, float>> m_Axis;

		//First = Button, Second = Axis Value
		std::vector<std::pair<Buttons, float>> m_Buttons;
	};

	struct ActionMapping
	{
		std::vector<Buttons> m_Buttons;

		//First = Axis, Second =  Activation Threshold, Third = IsPositive
		std::vector<std::tuple<Axis, float, bool>> m_Axis;
	};

	//todo: replace with flatmap
	class InputMapping
	{
	public:
		InputMapping() = default;

		void SetAxisMapping(const std::string& MappingName, const AxisMapping& Mapping);
		void SetActionMapping(const std::string& MappingName, const ActionMapping& Mapping);

		AxisMapping* GetAxisMapping(const std::string& MappingName);
		ActionMapping* GetActionMapping(const std::string& MappingName);

		const std::vector<std::pair<std::string, AxisMapping>>& GetAllAxisMappings() const;
		const std::vector<std::pair<std::string, ActionMapping>>& GetAllActionMappings() const;

	private:
		std::vector<std::pair<std::string, AxisMapping>> m_AxisMappings;
		std::vector<std::pair<std::string, ActionMapping>> m_ActionMappings;
	};

	class InputMappingState
	{
	public:
		InputMappingState() = default;

		void SetInputMapping(const InputMapping& Mapping);

		void SetAxisValue(const std::string& MappingName, float Value);
		float GetAxisValue(const std::string& MappingName);

		void SetActionValue(const std::string& MappingName, ActionMappingState Value);
		ActionMappingState GetActionValue(const std::string& MappingName);

	private:
		std::unordered_map<std::string, float> m_AxisMappingState;
		std::unordered_map<std::string, ActionMappingState> m_ActionMappingState;
	};
}